#!/bin/bash

# exit on all errors
set -e

command -v skuba || {
    echo "skuba could not be found, exiting"
    exit 99
}

# Create cluster configuration using the first master's floating IP
skuba -v 5 cluster init --control-plane {{ hostvars[groups['masters'][0]].external_ip | default( hostvars[groups['masters'][0]].ansible_default_ipv4.address ) }} caasp40-cluster

# change into newly created directory
cd caasp40-cluster || exit 11

# bootstrap the first master
echo "Bootstrapping the first master"
skuba -v 5 node bootstrap --user {{ hostvars[groups['masters'][0]]['ansible_user'] }} --sudo --target {{ hostvars[groups['masters'][0]].inventory_hostname }}.{{ domain_name }} {{ hostvars[groups['masters'][0]]['inventory_hostname'] }}
echo "Bootstrapping of first master successfully finished"

echo "Checking the cluster status"
# check the cluster status
skuba cluster status

{% if groups['masters'] is defined and groups['masters'] | length > 1 %}

echo ""
echo "Joining the remaining master nodes"
# join all remaining master nodes
{% for master in groups['masters'] %}
{% if loop.index != 1 %}
skuba -v 5 node join --role master --user {{ hostvars[master]['ansible_user'] }} --sudo --target {{ hostvars[master].inventory_hostname }}.{{ domain_name }} {{ hostvars[master]['inventory_hostname'] }}
{% endif%}
{% endfor %}
echo "Joining of master nodes successfully finished"

{% endif%}

{% if groups['worker_nodes'] is defined and groups['worker_nodes'] | length != 0 %}
echo ""
echo "Joining worker nodes"
# join all worker nodes
{% for node in groups['worker_nodes'] %}
skuba -v 5 node join --role worker --user {{ hostvars[node]['ansible_user'] }} --sudo --target {{ hostvars[node].inventory_hostname }}.{{ domain_name }} {{ hostvars[node]['inventory_hostname'] }}
{% endfor %}
echo ""
echo "Joining of worker nodes finished successfully"

{% endif%}

echo "Checking the cluster status"
# check the cluster status 
skuba cluster status

exit 0
